{
   "swagger": "2.0",
   "info": {
      "description": "Documentação do GepetoServices. Todos os serviços feitos pelo Gepetojj, em um só lugar.",
      "version": "",
      "title": "GepetoServices",
      "contact": {
         "name": "Gepetojj",
         "email": "nmjoaopedro22@gmail.com"
      },
      "license": {
         "name": "MIT",
         "url": "https://github.com/gepetojj/gepetoservices/blob/main/LICENSE"
      }
   },
   "host": "gepetoservices.herokuapp.com",
   "basePath": "/api",
   "tags": [
      {
         "name": "status",
         "description": "Status das API's."
      },
      {
         "name": "storage",
         "description": "Serviços de armazenamento de arquivos."
      },
      {
         "name": "users",
         "description": "Serviços relacionados a usuários."
      },
      {
         "name": "translator",
         "description": "Traduza textos."
      }
   ],
   "schemes": [
      "https"
   ],
   "paths": {
      "/status": {
         "get": {
            "tags": [
               "status"
            ],
            "summary": "Receba o status das API's.",
            "description": "",
            "operationId": "status",
            "produces": [
               "application/json"
            ],
            "responses": {
               "200": {
                  "description": "Status obtido com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        },
                        "storage": {
                           "type": "object",
                           "description": "Status das API's do tipo storage.",
                           "properties": {
                              "access": {
                                 "type": "object",
                                 "description": "Status da API.",
                                 "properties": {
                                    "statusCode": {
                                       "type": "integer",
                                       "description": "Status http enviado pela API.",
                                       "example": 200
                                    },
                                    "timeToRespond": {
                                       "type": "integer",
                                       "description": "Tempo de responsta da API em milisegundos.",
                                       "example": 1000
                                    },
                                    "classifiedAs": {
                                       "type": "string",
                                       "description": "Classificação do status da API, basedo nos elementos anterioes.",
                                       "example": "OK"
                                    }
                                 }
                              },
                              "delete": {
                                 "type": "object",
                                 "description": "Status da API.",
                                 "properties": {
                                    "statusCode": {
                                       "type": "integer",
                                       "description": "Status http enviado pela API.",
                                       "example": 200
                                    },
                                    "timeToRespond": {
                                       "type": "integer",
                                       "description": "Tempo de responsta da API em milisegundos.",
                                       "example": 1000
                                    },
                                    "classifiedAs": {
                                       "type": "string",
                                       "description": "Classificação do status da API, basedo nos elementos anterioes.",
                                       "example": "OK"
                                    }
                                 }
                              },
                              "upload": {
                                 "type": "object",
                                 "description": "Status da API.",
                                 "properties": {
                                    "statusCode": {
                                       "type": "integer",
                                       "description": "Status http enviado pela API.",
                                       "example": 200
                                    },
                                    "timeToRespond": {
                                       "type": "integer",
                                       "description": "Tempo de responsta da API em milisegundos.",
                                       "example": 1000
                                    },
                                    "classifiedAs": {
                                       "type": "string",
                                       "description": "Classificação do status da API, basedo nos elementos anterioes.",
                                       "example": "OK"
                                    }
                                 }
                              }
                           }
                        },
                        "translator": {
                           "type": "object",
                           "description": "Status das API's do tipo translator.",
                           "properties": {
                              "statusCode": {
                                 "type": "integer",
                                 "description": "Status http enviado pela API.",
                                 "example": 200
                              },
                              "timeToRespond": {
                                 "type": "integer",
                                 "description": "Tempo de responsta da API em milisegundos.",
                                 "example": 1000
                              },
                              "classifiedAs": {
                                 "type": "string",
                                 "description": "Classificação do status da API, basedo nos elementos anterioes.",
                                 "example": "OK"
                              }
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Erro do servidor.",
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": true
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        }
                     }
                  }
               }
            }
         }
      },
      "/storage/access": {
         "get": {
            "tags": [
               "storage"
            ],
            "summary": "Acessa um arquivo guardado em nossa núvem.",
            "description": "",
            "operationId": "storageAccess",
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "filename",
                  "in": "query",
                  "description": "Nome do arquivo guardado, informado quando o upload é feito.",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Arquivo acessado com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        },
                        "file": {
                           "type": "string",
                           "description": "Link do arquivo."
                        }
                     }
                  }
               },
               "400": {
                  "description": "Erro no request."
               },
               "500": {
                  "description": "Erro do servidor."
               }
            }
         }
      },
      "/storage/delete": {
         "delete": {
            "tags": [
               "storage"
            ],
            "summary": "Deleta um arquivo seu da núvem.",
            "description": "",
            "operationId": "storageDelete",
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "filename",
                  "in": "query",
                  "description": "Nome do arquivo guardado, informado quando o upload é feito.",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Arquivo deletado com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        }
                     }
                  }
               },
               "400": {
                  "description": "Erro no request."
               },
               "500": {
                  "description": "Erro do servidor."
               }
            }
         }
      },
      "/storage/upload": {
         "post": {
            "tags": [
               "storage"
            ],
            "summary": "Guarda um arquivo na nossa núvem.",
            "description": "Os arquivos para que sejam guardados, devem ter até 5MB de tamanho, e só podem ser vídeos, imagens, áudios ou textos.",
            "operationId": "storageUpload",
            "consumes": [
               "multipart/form-data"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "file",
                  "in": "formData",
                  "description": "Arquivo para ser guardado.",
                  "required": true,
                  "type": "file"
               }
            ],
            "responses": {
               "200": {
                  "description": "Arquivo guardado com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        },
                        "filename": {
                           "type": "string",
                           "description": "Nome do arquivo que foi guardado."
                        }
                     }
                  }
               },
               "400": {
                  "description": "Erro no request."
               },
               "401": {
                  "description": "Erro ao tentar deletar um arquivo que não é seu."
               },
               "500": {
                  "description": "Erro do servidor."
               }
            }
         }
      },
      "/users/register": {
         "post": {
            "tags": [
               "users"
            ],
            "summary": "Cria um usuário.",
            "description": "",
            "operationId": "usersRegister",
            "consumes": [
               "application/json"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "user",
                  "in": "body",
                  "description": "Dados do usuário que será criado.",
                  "required": true,
                  "schema": {
                     "type": "object",
                     "properties": {
                        "username": {
                           "type": "string",
                           "description": "Nome do usuário."
                        },
                        "email": {
                           "type": "string",
                           "description": "Email do usuário."
                        },
                        "password": {
                           "type": "string",
                           "description": "Senha do usuário.",
                           "minimum": 10
                        },
                        "passwordConfirm": {
                           "type": "string",
                           "description": "Senha do usuário novamente.",
                           "minimum": 10
                        }
                     }
                  }
               },
               {
                  "name": "X-From-App",
                  "in": "header",
                  "description": "Define de qual app este request vem.",
                  "type": "string",
                  "required": false
               }
            ],
            "responses": {
               "200": {
                  "description": "Usuário criado com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        }
                     }
                  }
               },
               "400": {
                  "description": "Erro no request.",
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": true
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        },
                        "errors": {
                           "type": "array",
                           "description": "Lista de erros.",
                           "items": {
                              "type": "string"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Erro do servidor."
               }
            }
         }
      },
      "/users/login": {
         "post": {
            "tags": [
               "users"
            ],
            "summary": "Entra na sua conta.",
            "description": "",
            "operationId": "usersLogin",
            "consumes": [
               "application/json"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "user",
                  "in": "body",
                  "description": "Dados do usuário.",
                  "required": true,
                  "schema": {
                     "type": "object",
                     "properties": {
                        "username": {
                           "type": "string",
                           "description": "Nome do usuário."
                        },
                        "password": {
                           "type": "string",
                           "description": "Senha do usuário.",
                           "minimum": 10
                        }
                     }
                  }
               },
               {
                  "name": "X-From-App",
                  "in": "header",
                  "description": "Define de qual app este request vem.",
                  "type": "string",
                  "required": false
               }
            ],
            "responses": {
               "200": {
                  "description": "Logado com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        },
                        "accessToken": {
                           "type": "string",
                           "format": "jwt",
                           "description": "Token de acesso JWT. Válido por 15 minutos."
                        }
                     }
                  }
               },
               "400": {
                  "description": "Erro no request.",
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": true
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        },
                        "errors": {
                           "type": "array",
                           "description": "Lista de erros.",
                           "items": {
                              "type": "string"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Erro do servidor."
               }
            }
         }
      },
      "/users/verify": {
         "get": {
            "tags": [
               "users"
            ],
            "summary": "Retorna os dados não sensíveis da conta logada.",
            "description": "Necessita do cookie 'refreshToken', que é gerado pelo endpoint de login, quando finalizado com sucesso.",
            "operationId": "usersVerify",
            "consumes": [
               "application/json"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "Authorization",
                  "in": "header",
                  "description": "Token JWT com prefix Bearer.",
                  "type": "string",
                  "format": "jwt",
                  "required": true
               },
               {
                  "name": "X-From-App",
                  "in": "header",
                  "description": "Define de qual app este request vem.",
                  "type": "string",
                  "required": false
               }
            ],
            "responses": {
               "200": {
                  "description": "Dados retornados com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        },
                        "data": {
                           "type": "object",
                           "description": "Dados do usuário."
                        }
                     }
                  }
               },
               "400": {
                  "description": "Erro no request."
               },
               "401": {
                  "description": "Erro ao não ter autorização para acessar o endpoint."
               },
               "500": {
                  "description": "Erro do servidor."
               }
            }
         }
      },
      "/users/confirm": {
         "get": {
            "tags": [
               "users"
            ],
            "summary": "Confirma ações por meio de emails enviados pela API.",
            "description": "",
            "operationId": "usersConfirm",
            "consumes": [
               "application/json"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "t",
                  "in": "query",
                  "description": "Token JWT.",
                  "type": "string",
                  "format": "jwt",
                  "required": true
               }
            ],
            "responses": {
               "200": {
                  "description": "Email confirmado com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        }
                     }
                  }
               },
               "400": {
                  "description": "Erro no request."
               },
               "401": {
                  "description": "Erro ao não ter autorização para acessar o endpoint."
               },
               "500": {
                  "description": "Erro do servidor."
               }
            }
         }
      },
      "/users/change/avatar": {
         "put": {
            "tags": [
               "users"
            ],
            "summary": "Muda o avatar da conta.",
            "description": "Necessita do cookie 'refreshToken', que é gerado pelo endpoint de login, quando finalizado com sucesso.",
            "operationId": "usersChangeAvatar",
            "consumes": [
               "multipart/form-data"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "Authorization",
                  "in": "header",
                  "description": "Token JWT com prefix Bearer.",
                  "type": "string",
                  "format": "jwt",
                  "required": true
               },
               {
                  "name": "X-From-App",
                  "in": "header",
                  "description": "Define de qual app este request vem.",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "file",
                  "in": "formData",
                  "description": "Novo avatar. Deve ser uma imagem de até 3MB, que vai ser redimencionada para 128x128 pixels.",
                  "required": true,
                  "type": "file"
               }
            ],
            "responses": {
               "200": {
                  "description": "Avatar alterado com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        },
                        "link": {
                           "type": "string",
                           "description": "Link do avatar."
                        }
                     }
                  }
               },
               "400": {
                  "description": "Erro no request."
               },
               "401": {
                  "description": "Erro ao não ter autorização para acessar o endpoint."
               },
               "500": {
                  "description": "Erro do servidor."
               }
            }
         }
      },
      "/users/change/password": {
         "put": {
            "tags": [
               "users"
            ],
            "summary": "Muda a senha da conta.",
            "description": "Necessita do cookie 'refreshToken', que é gerado pelo endpoint de login, quando finalizado com sucesso.\n\nSe o endpoint retornar com código 200, o usuário deverá confirmar essa ação no email.",
            "operationId": "usersChangePassword",
            "consumes": [
               "application/json"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "Authorization",
                  "in": "header",
                  "description": "Token JWT com prefix Bearer.",
                  "type": "string",
                  "format": "jwt",
                  "required": true
               },
               {
                  "name": "X-From-App",
                  "in": "header",
                  "description": "Define de qual app este request vem.",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "password",
                  "in": "body",
                  "description": "Nova senha para ser alterada.",
                  "required": true,
                  "schema": {
                     "type": "object",
                     "properties": {
                        "password": {
                           "type": "string",
                           "description": "Senha atual do usuário.",
                           "minimum": 10
                        },
                        "newPassword": {
                           "type": "string",
                           "description": "Nova senha do usuário.",
                           "minimum": 10
                        },
                        "newPasswordConfirm": {
                           "type": "string",
                           "description": "Senha atual do usuário novamente.",
                           "minimum": 10
                        }
                     }
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Senha alterada com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "string",
                           "description": "Mensagem do servidor."
                        }
                     }
                  }
               },
               "400": {
                  "description": "Erro no request."
               },
               "401": {
                  "description": "Erro ao não ter autorização para acessar o endpoint."
               },
               "500": {
                  "description": "Erro do servidor."
               }
            }
         }
      },
      "/translator": {
         "get": {
            "tags": [
               "translator"
            ],
            "summary": "Traduza textos entre línguas.",
            "description": "",
            "operationId": "translator",
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "text",
                  "in": "query",
                  "description": "Texto para ser traduzido.",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "from",
                  "in": "query",
                  "description": "Língua original do texto, no formato iso-639",
                  "type": "string",
                  "required": false
               },
               {
                  "name": "to",
                  "in": "query",
                  "description": "Língua para o texto ser traduzido, no formato iso-639",
                  "type": "string",
                  "required": true
               }
            ],
            "responses": {
               "200": {
                  "description": "Texto traduzido com sucesso.",
                  "headers": {
                     "Retry-After": {
                        "type": "integer",
                        "format": "float",
                        "description": "Tempo em milisegundos até o próximo request ser válido."
                     },
                     "X-RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limite total de requests disponíveis nesse endpoint."
                     },
                     "X-RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantos requests faltam para a API ficar limitada."
                     },
                     "X-RateLimit-Reset": {
                        "type": "number",
                        "format": "date",
                        "description": "Quando o limite vai resetar. UTC-3."
                     }
                  },
                  "schema": {
                     "type": "object",
                     "properties": {
                        "error": {
                           "type": "boolean",
                           "description": "Se houve erro durante a execução da API.",
                           "example": false
                        },
                        "message": {
                           "type": "object",
                           "description": "Resultado da tradução",
                           "properties": {
                              "text": {
                                 "type": "string",
                                 "description": "Texto traduzido."
                              },
                              "from": {
                                 "type": "object",
                                 "properties": {
                                    "language": {
                                       "type": "object",
                                       "properties": {
                                          "didYouMean": {
                                             "type": "boolean",
                                             "description": "Se houve uma correção gramática na tradução final.",
                                             "example": false
                                          },
                                          "iso": {
                                             "type": "string",
                                             "description": "Língua do texto traduzido no formato iso-639."
                                          }
                                       }
                                    },
                                    "text": {
                                       "type": "object",
                                       "properties": {
                                          "autoCorrected": {
                                             "type": "boolean",
                                             "description": "Se o texto foi corrigido automaticamente.",
                                             "example": false
                                          },
                                          "value": {
                                             "type": "string",
                                             "description": "Texto corrigido, caso haja."
                                          },
                                          "didYouMean": {
                                             "type": "boolean",
                                             "description": "Se houve uma correção gramática na texto original.",
                                             "example": false
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "400": {
                  "description": "Erro no request."
               },
               "500": {
                  "description": "Erro do servidor."
               }
            }
         }
      }
   },
   "externalDocs": {
      "description": "Veja mais na wiki",
      "url": "https://github.com/gepetojj/gepetoservices/wiki"
   }
}